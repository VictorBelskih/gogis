// func (r *GisPostgres) GetField() (gogis.GeoJSON, error) {
// 	var fields []gogis.Field
// 	query := `SELECT field.*, ST_AsGeoJSON(geom) as geom_json,
// 	COALESCE(tlu.tlu_name, 'нет данных') AS Tlu_name,
// 	COALESCE(cult.title, 'нет данных') AS title,
// 	COALESCE(cult2.title, 'нет данных') AS title2,
//     COALESCE(field_param.Id, 999999) AS Id,
//     COALESCE(field_param.Id_eu, 999999) AS Id_eu,
//     COALESCE(field_param.Station, 'нет данных') AS Station,
//     COALESCE(field_param.Date, 'нет данных') AS Date,
//     COALESCE(field_param.Sub_name, 999999.0) AS Sub_name,
//     COALESCE(field_param.Reg_name, 'нет данных') AS Reg_name,
//     COALESCE(field_param.Reg_id, 'нет данных') AS Reg_id,
//     COALESCE(field_param.Reg_oktmo, 'нет данных') AS Reg_oktmo,
//     COALESCE(field_param.Sp_name, 'нет данных') AS Sp_name,
//     COALESCE(field_param.Sp_id, 'нет данных') AS Sp_id,
//     COALESCE(field_param.Date_dzz, 'нет данных') AS Date_dzz,
//     COALESCE(field_param.Dzz_ka_s, 'нет данных') AS Dzz_ka_s,
//     COALESCE(field_param.Farm_name, 'нет данных') AS Farm_name,
//     COALESCE(field_param.Tlu, 999999.0) AS Tlu,
//     COALESCE(field_param.Mlrt_d, 999999.0) AS Mlrt_d,
//     COALESCE(field_param.Mlrt_w, 999999.0) AS Mlrt_w,
//     COALESCE(field_param.Area_f, 999999.0) AS Area_f,
//     COALESCE(field_param.Crop, 999999) AS Crop,
//     COALESCE(field_param.Crop_old, 999999) AS Crop_old,
//     COALESCE(field_param.S_type, 999999.0) AS S_type,
//     COALESCE(field_param.S_ptype, 999999.0) AS S_ptype,
//     COALESCE(field_param.S_ms, 999999.0) AS S_ms,
//     COALESCE(field_param.S_ind, 999999.0) AS S_ind,
//     COALESCE(field_param.Organic, 999999.0) AS Organic,
//     COALESCE(field_param.Ph_kcl, 999999.0) AS Ph_kcl,
//     COALESCE(field_param.Ph_water, 999999.0) AS Ph_water,
//     COALESCE(field_param.Gydr_c, 999999.0) AS Gydr_c,
//     COALESCE(field_param.Eko, 999999.0) AS Eko,
//     COALESCE(field_param.El_p, 999999.0) AS El_p,
//     COALESCE(field_param.El_k, 999999.0) AS El_k,
// 	COALESCE(field_param.El_n, 999999.0) AS El_n,
//     COALESCE(field_param.El_ca, 999999.0) AS El_ca,
//     COALESCE(field_param.El_mg, 999999.0) AS El_mg,
//     COALESCE(field_param.El_zn, 999999.0) AS El_zn,
//     COALESCE(field_param.El_cu, 999999.0) AS El_cu,
//     COALESCE(field_param.El_mo, 999999.0) AS El_mo,
//     COALESCE(field_param.El_s, 999999.0) AS El_s,
//     COALESCE(field_param.El_b, 999999.0) AS El_b,
//     COALESCE(field_param.Il, 999999.0) AS Il,
//     COALESCE(field_param.Glina, 999999.0) AS Glina,
//     COALESCE(field_param.Torf, 999999.0) AS Torf,
//     COALESCE(field_param.Pereyv, 999999.0) AS Pereyv,
//     COALESCE(field_param.Plotn, 999999.0) AS Plotn,
//     COALESCE(field_param.Agreg, 999999.0) AS Agreg,
//     COALESCE(field_param.Field_vl, 999999.0) AS Field_vl,
//     COALESCE(field_param.Nas_osn, 999999.0) AS Nas_osn,
//     COALESCE(field_param.DGRD_ST, 999999.0) AS DGRD_ST,
//     COALESCE(field_param.Yklon, 999999.0) AS Yklon,
//     COALESCE(field_param.Metals, 999999.0) AS Metals,
//     COALESCE(field_param.Met_pb, 999999.0) AS Met_pb,
//     COALESCE(field_param.Met_cd, 999999.0) AS Met_cd,
//     COALESCE(field_param.Met_hg, 999999.0) AS Met_hg,
//     COALESCE(field_param.Met_as, 999999.0) AS Met_as,
//     COALESCE(field_param.Plt_tox, 999999.0) AS Plt_tox,
//     COALESCE(field_param.Plt_oil, 999999.0) AS Plt_oil,
//     COALESCE(field_param.Cs137, 999999.0) AS Cs137,
//     COALESCE(field_param.Sr90, 999999.0) AS Sr90,
//     COALESCE(field_param.Gamma, 999999.0) AS Gamma,
//     COALESCE(field_param.Salinity, 999999.0) AS Salinity,
//     COALESCE(field_param.Solon_Na, 999999.0) AS Solon_Na,
//     COALESCE(field_param.Solon_pr, 999999.0) AS Solon_pr,
//     COALESCE(field_param.Wind_er, 999999.0) AS Wind_er,
//     COALESCE(field_param.Water_er, 999999.0) AS Water_er,
//     COALESCE(field_param.Zakust, 999999.0) AS Zakust,
//     COALESCE(field_param.Zales, 999999.0) AS Zales,
//     COALESCE(field_param.Zarast, 999999.0) AS Zarast,
//     COALESCE(field_param.Zastroen, 999999.0) AS Zastroen,
//     COALESCE(field_param.Narushen, 999999.0) AS Narushen,
//     COALESCE(field_param.Prochee, 999999.0) AS Prochee,
//     COALESCE(field_param.Mosh_g, 999999.0) AS Mosh_g,
//     COALESCE(field_param.Mosh_m, 999999.0) AS Mosh_m,
//     COALESCE(field_param.Microbio, 'нет данных') AS Microbio,
//     COALESCE(field_param.S_cs137, 999999.0) AS S_cs137,
//     COALESCE(field_param.S_sr90, 999999.0) AS S_sr90,
//     COALESCE(field_param.Solon_d, 999999.0) AS Solon_d,
//     COALESCE(field_param.Fact_isp, 'нет данных') AS Fact_isp,
//     COALESCE(field_param.Eco_na, 999999.0) AS Eco_na,
//     COALESCE(field_param.El_mn, 999999.0) AS El_mn,
//     COALESCE(field_param.El_co, 999999.0) AS El_co,
//     COALESCE(field_param.Pol_id, 999999) AS Pol_id,
//     COALESCE(field_param.Gosprog, 999999) AS Gosprog,
//     COALESCE(field_param.Rekisp, 999999) AS Rekisp,
//     COALESCE(field_param.Humus_class, 'нет данных') AS Humus_class,
//     COALESCE(field_param.Class_k, 'нет данных') AS Class_k,
//     COALESCE(field_param.Class_p, 'нет данных') AS Class_p
// FROM field
// LEFT JOIN field_param ON field.f_id = field_param.id_eu
// LEFT JOIN tlu ON field_param.tlu = tlu.id
// LEFT JOIN cult ON field_param.crop = cult.id
// LEFT JOIN cult as cult2 ON field_param.crop = cult2.id`
// 	err := r.db.Select(&fields, query)

// 	if err != nil {
// 		return gogis.GeoJSON{}, err
// 	}

// 	var features []gogis.Feature
// 	for _, field := range fields {
// 		properties := map[string]interface{}{
// 			"Id_eu":       field.Id_eu,
// 			"Farm_name":   field.Farm_name,
// 			"Tlu":         field.Tlu,
// 			"Tlu_name":    field.Tlu_name,
// 			"Area_f":      field.Area_f,
// 			"Organic":     field.Organic,
// 			"El_p":        field.El_p,
// 			"Class_p":     field.Class_p,
// 			"El_k":        field.El_k,
// 			"Class_k":     field.Class_k,
// 			"Humus_class": field.Humus_class,
// 			"ph_water":    field.Ph_water,
// 			"Date":        field.Date,
// 			"Mlrt_d":      field.Mlrt_d,
// 			"Mlrt_w":      field.Mlrt_w,
// 			"fact_isp":    field.Fact_isp,
// 			"Crop":        field.Crop,
// 			"Crop_old":    field.Crop_old,
// 			"S_type":      field.S_type,
// 			"S_ptype":     field.S_ptype,
// 			"S_ms":        field.S_ms,
// 			"S_ind":       field.S_ind,
// 			"El_ca":       field.El_ca,
// 			"El_mg":       field.El_mo,
// 			"El_n":        field.El_n,
// 			"El_co":       field.El_co,
// 			"El_zn":       field.El_zn,
// 			"El_cu":       field.El_cu,
// 			"El_mo":       field.El_mo,
// 			"El_mn":       field.El_mn,
// 			"El_s":        field.El_s,
// 			"El_b":        field.El_b,
// 			"Il":          field.Il,
// 			"Glina":       field.Glina,
// 			"Torf":        field.Torf,
// 			"Pereyv":      field.Pereyv,
// 			"Plotn":       field.Plotn,
// 			"Agreg":       field.Agreg,
// 			"Field_vl":    field.Field_vl,
// 			"Nas_osn":     field.Nas_osn,
// 			"Dgrd_st":     field.DGRD_ST,
// 			"Yklon":       field.Yklon,
// 			"Metals":      field.Metals,
// 			"Met_pb":      field.Met_pb,
// 			"Met_cd":      field.Met_cd,
// 			"Met_hg":      field.Met_hg,
// 			"Met_as":      field.Met_as,
// 			"Plt_tox":     field.Plt_tox,
// 			"Plt_oil":     field.Plt_oil,
// 			"Cs137":       field.Cs137,
// 			"Sr90":        field.Sr90,
// 			"Gamma":       field.Gamma,
// 			"Salinity":    field.Salinity,
// 			"Solon_na":    field.Solon_Na,
// 			"Solon_pr":    field.Solon_pr,
// 			"Wind_er":     field.Wind_er,
// 			"Water_er":    field.Water_er,
// 			"Zakust":      field.Zakust,
// 			"Zales":       field.Zales,
// 			"Zarast":      field.Zarast,
// 			"Narushen":    field.Narushen,
// 			"Zastroen":    field.Zastroen,
// 			"Prochee":     field.Prochee,
// 			"Mosh_g":      field.Mosh_g,
// 			"Mosh_m":      field.Mosh_m,
// 			"Microbio":    field.Microbio,
// 			"S_cs137":     field.S_cs137,
// 			"S_sr90":      field.S_sr90,
// 			"Solon_d":     field.Solon_d,
// 			"Eco_na":      field.Eco_na,
// 			"Eko":         field.Eko,
// 			"gydr_c":      field.Gydr_c,
// 			"Title":       field.Title,
// 			"Title2":      field.Title2,
// 		}

// 		feature := gogis.Feature{
// 			Type:       "Feature",
// 			Geometry:   json.RawMessage(field.Geom_json),
// 			Properties: properties,
// 		}

// 		features = append(features, feature)
// 	}

// 	geoJSON := gogis.GeoJSON{
// 		Type:     "FeatureCollection",
// 		Features: features,
// 	}

// 	return geoJSON, nil
// }